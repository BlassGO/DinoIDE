:MAIN
	# Change the default escape character, for greater convenience in directorys: from \ to `
    Escape `
    
    # Create an OBJECT Directory
    Set dir = $(New Directory with "TestFolder")
    dir.Delete()
    dir.Create()

    # Create a SubFolder
    dir.CreateSub("SubFolder")

    #######################################################################
    # THIS PART DOES NOT CORRESPOND to the Directory Library, but to the File Library.
    # If you want a more detailed description of the File Library, review the example corresponding to this
    # Some files will be created in the directory so that the following examples with the Directory Library are more complete.
    Set file = $(New File with "TestFolder\test.txt" "UTF-8")
    file.Create()
    Set file.path = "TestFolder\test2.txt"
    file.Create()
    Set file.path = "TestFolder\test3.txt"
    Set file.content = "  BlassGO!  "
    Set file.path = "TestFolder\SubFolder\test4.txt"
    file.Create()
    Set file =
    #######################################################################

    # Returns the number of existing folders/files
    # No recursion into subfolders
    Set COUNT = dir.Count()
    Msg "COUNT" with "There are %COUNT% folders/files"

    # It is possible to filter folders or files
    Set COUNT = dir.Count("F")
    Msg "COUNT" with "There are %COUNT% files"

    Set COUNT = dir.Count("D")
    Msg "COUNT" with "There are %COUNT% folders"

    # It is also possible to enable the "R" recursion in subfolders
    Set COUNT = dir.Count("FDR")
    Msg "COUNT" with "There are %COUNT% folders/files including those in subfolders"



    # The Content() method returns a list (STRING) separating each existing path in the directory with a Unix line break (\N)
    # No recursion into subfolders
    Msg "CONTENTS" with dir.Content()

    # As with the Count() method, it is possible to filter or expand the results
    Msg "CONTENS - Only files - Recursive" with dir.Content("FR")



    # The CopyHere() method allows you to copy a folder or file to the current directory
    dir.CopyHere("TestFolder\SubFolder\test4.txt")

    # The MoveHere() method allows you to move a file or folder to the current directory
    # In reality, depending on the case, temporarily changing "dir.path" may be more optimal, but to avoid confusion it was preferred to create a new Directory Object            
    Set dir_2 = $(New Directory with "TestFolder\SubFolder")
    dir_2.MoveHere("TestFolder\test2.txt")
    Set dir_2 =
    
    
    
    