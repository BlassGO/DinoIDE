:MAIN
 	# Specific functions for managing file/folder PATHs
 	
 	# Change the default escape character, for greater convenience in file paths: from \ to `
 	Escape `
	
 	# Example PATH
 	Set PATH = "C:\Users\BlassGO\Desktop\Test.txt"
 	
 	# Get only the NAME of the FILE/FOLDER
 	Msg "NAME" with $(basename PATH)
 	
 	# Get only the DIRECTORY of the FILE/FOLDER
 	Msg "DIRECTORY" with $(dirname PATH)
 	
 	# Get only the EXTENSION of the FILE/FOLDER
	Msg "EXTENSION" with $(extname PATH)
	
	# Get only the NAME WITHOUT EXTENSION of the FILE/FOLDER
	Msg "SIMPLENAME" with $(simplename PATH)
	
	
	# Something interesting is that even Unix PATHs are supported
	Set PATH = "/system/bin/idk.sh"
	Msg "UNIX" with $(simplename PATH)
	
	#--------------------------LIST---------------------------
	# The LIST function is special because it uses the LITERAL syntax that makes it easier to send parameters for understanding
	# BUT it does not support direct references to Variables, you must use % %
	
	# Get a listing of all FILE/FOLDER PATHs in the current directory (Separated with a Unix `n linebreak)
	# Non-recursive to subfolders by default
	Msg "LIST" with $(List)
	
	# Filter only files
	Msg "LIST - FILES" with $(List -files)
	
	# Filter only folders
	Msg "LIST - FOLDERS" with $(List -dirs)
	
	# Activate recursion on all subfolders
	Msg "LIST - FOLDERS - RECURSIVE" with $(List -dirs -recursive)

	# You can specify multiple external PATHs and they will all be added in the same list
	Msg "LIST - EXTERNAL" with $(List -files "C:" "C:\something" "C:\something_2")
	
	# The "-pattern" option allows complete flexibility to use partial paths and filter content
	Msg "LIST - *.config" with $(List -pattern "*.config")
	
	# When using the "-pattern" option it is necessary to explicitly specify whether you want to obtain the contents of a folder.
	# Otherwise, only the folder path will be taken but NOT its contents (which is usually the default)
    Msg "LIST - C:\*" with $(List -dirs -pattern "C:\*")
    
    # To use a Variable, the use of percentage expressions % % is mandatory
    Set PATTERN = "C:\*.txt"
    Msg "LIST - C:\*.txt" with $(List -files -pattern "%PATTERN%")



